namespace = hde_regent

#####################
### SETUP
### 0-99 reserved
# These events are called from events 61215 and 61216 and hijack the chains
## Regent informed courtier has challenged him to duel over regency.
character_event = {
	id = hde_regent.0
	desc = EVTDESC61221
	picture = GFX_evt_shadowy_cabal
	
	is_triggered_only = yes
	
	option = { # Accept
		name = EVTOPTA61221
		ai_chance = { factor = 80 }
		# FROM = {
			# character_event = { id = 61223 tooltip = EVTTOOLTIP61223 }
			# set_character_flag = duelist_courtier
		# }
		# set_character_flag = duelist_courtier

		# Set Duel Type
		set_character_flag = flag_duel_regent
		FROM = { set_character_flag = flag_duel_regent }
		# Set Options
		# set_character_flag = flag_duel_to_the_death
		# FROM = { set_character_flag = flag_duel_to_the_death }
		# Start this thing!
		FROM = { character_event = { id = hde_core.0 } }
	}
	option = { # Refuse
		name = EVTOPTB61221
		ai_chance = { factor = 0 }
		prestige = -60
		liege = {
			any_courtier = {
				opinion = {
					who = ROOT
					modifier = opinion_coward
					years = 1
				}
			}
		}
		hidden_tooltip = {
			FROM = {
				character_event = {	id = 61245 }
			}
		}
	}
	option = { # Surrender regency
		name = EVTOPTC61221
		ai_chance = { factor = 20 }
		prestige = -20
		FROM = { give_minor_title = title_regent }
		hidden_tooltip = {
			FROM = {
				character_event = {	id = 61246 }
			}
		}
	}
}
## Courtier informed Regent challenges to duel.	
character_event = {
	id = hde_regent.1
	desc = EVTDESC61222
	picture = GFX_evt_shadowy_cabal
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA61222
		ai_chance = { factor = 100 }
		# set_character_flag = duelist_courtier
		# liege = {
			# random_courtier = {
				# limit = { has_minor_title = title_regent }
				# set_character_flag = duelist_courtier
			# }
		# }
		# Set Duel Type
		set_character_flag = flag_duel_regent
		FROM = { set_character_flag = flag_duel_regent }
		# Set Options
		# set_character_flag = flag_duel_to_the_death
		# FROM = { set_character_flag = flag_duel_to_the_death }
		# Start this thing!
		FROM = { character_event = { id = hde_core.0 } }
	}
	option = {
		name = EVTOPTB61222
		ai_chance = { factor = 0 }
		prestige = -40
	}
}

#####################
### INITIAL FLAVOR
### 100-199 reserved
### Since choosing whether to run or not is done in the introduction events, these are pure flavor
## Chain 1
# Aggressor wants to fight (ROOT = Winner, FROMFROM = Loser)
character_event = {
	id = hde_regent.100
	desc = hde_regent.100.desc
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.100.a
		
		hidden_tooltip = {
			FROMFROM = { # Send event to Loser
				character_event = { id = hde_regent.102 }
			}
		}
	}
}
# Aggressor wants to fight (ROOT = Loser, FROM = Winner)
character_event = {
	id = hde_regent.101
	desc = hde_regent.101.desc
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.101.a
		
		hidden_tooltip = {
			FROM = { # Send event to Loser
				character_event = { id = hde_regent.102 }
			}
		}
	}
}
# Defender delays (Sent to Winner or Loser)
character_event = {
	id = hde_regent.102
	desc = hde_regent.102.desc
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.102.a
		
		hidden_tooltip = {
			FROM = { # Send event to Winner or Loser
				character_event = { id = hde_regent.103 }
			}
		}
	}
}
# Aggressor taunts (Sent to Winner or Loser)
character_event = {
	id = hde_regent.103
	desc = hde_regent.103.desc
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.103.a
		
		FROM = { # Send event to Winner or Loser
			character_event = { id = hde_regent.104 tooltip = hde_regent.104.tt }
		}
	}
	option = {
		name = hde_regent.103.b
		
		FROM = { # Send event to Winner or Loser
			character_event = { id = hde_regent.105 tooltip = hde.readies }
		}
	}
}
# Defender responds to OPTA (Sent to Winner or Loser)
character_event = {
	id = hde_regent.104
	desc = hde_regent.104.desc
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.104.a
		
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.4 tooltip = hde.steels }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.5 tooltip = hde.steels }
			}
		}
	}
}
# Defender responds to OPTB (Sent to Winner or Loser)
character_event = {
	id = hde_regent.105
	desc = hde_regent.105.desc
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.105.a
		
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.4 tooltip = hde.steels }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.5 tooltip = hde.steels }
			}
		}
	}
}

## Chain 2
# Would be here, if Chain 2 existed

#####################
### SIZING UP FLAVOR
### 200-299 reserved
## Chain 1
## First Round
# Aggressor advances, looks for weakness (ROOT = Winner, FROMFROM = Loser)
character_event = {
	id = hde_regent.200
	desc = hde_regent.200.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.200.a
		
		hidden_tooltip = {
			FROMFROM = { # Send to Loser
				character_event = { id = hde_regent.202 }
			}
		}
	}
}
# Aggressor advances, looks for weakness (ROOT = Loser, FROM = Winner)
character_event = {
	id = hde_regent.201
	desc = hde_regent.201.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.201.a
		
		hidden_tooltip = {
			FROM = { # Send to Winner
				character_event = { id = hde_regent.202 }
			}
		}
	}
}
# Defender adopts defensive posture (Sent to Winner or Loser)
character_event = {
	id = hde_regent.202
	desc = hde_regent.202.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.202.a
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.6 tooltip = hde.prepares }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.7 tooltip = hde.prepares }
			}
		}
	}
}
## Second Round
# Aggressor wearily advances (ROOT = Winner, FROMFROM = Loser)
character_event = {
	id = hde_regent.203
	desc = hde_regent.203.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.203.a
		
		hidden_tooltip = {
			FROMFROM = { # Send to Loser
				character_event = { id = hde_regent.205 }
			}
		}
	}
}
# Aggressor wearily advances (ROOT = Loser, FROM = Winner)
character_event = {
	id = hde_regent.204
	desc = hde_regent.204.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.204.a
		
		hidden_tooltip = {
			FROM = { # Send to Winner
				character_event = { id = hde_regent.205 }
			}
		}
	}
}
# Defender wearily adopts defensive posture (Sent to Winner or Loser)
character_event = {
	id = hde_regent.205
	desc = hde_regent.205.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.205.a
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.6 tooltip = hde.prepares }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.7 tooltip = hde.prepares }
			}
		}
	}
}
## Third Round
# Aggressor advances, exhausted (ROOT = Winner, FROMFROM = Loser)
character_event = {
	id = hde_regent.206
	desc = hde_regent.206.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.206.a
		
		hidden_tooltip = {
			FROMFROM = { # Send to Loser
				character_event = { id = hde_regent.208 }
			}
		}
	}
}
# Aggressor advances, exhausted (ROOT = Loser, FROM = Winner)
character_event = {
	id = hde_regent.207
	desc = hde_regent.207.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.207.a
		
		hidden_tooltip = {
			FROM = { # Send to Winner
				character_event = { id = hde_regent.208 }
			}
		}
	}
}
# Defender adopts defensive posture, almost exhausted (Sent to Winner or Loser)
character_event = {
	id = hde_regent.208
	desc = hde_regent.208.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.208.a
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.6 tooltip = hde.prepares }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.7 tooltip = hde.prepares }
			}
		}
	}
}

## Chain 2
# Would be here, if Chain 2 existed

#####################
### COMBAT FLAVOR
### 300-399 reserved
## Chain 1
# Aggressor thinks he sees an opening (ROOT = Winner, FROMFROM = Loser)
character_event = {
	id = hde_regent.300
	desc = hde_regent.300.desc
	picture = GFX_evt_duel1
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.300.a

		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.302 tooltip = hde.defends }
		}
	}
}
# Aggressor thinks he sees an opening (ROOT = Loser, FROM = Winner)
character_event = {
	id = hde_regent.301
	desc = hde_regent.301.desc
	picture = GFX_evt_duel1
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.301.a
		
		FROM = { # Send to Winner
			character_event = { id = hde_regent.303 tooltip = hde.defends }
		}
	}
}
# Defender makes a mistake and gets attacked (Sent to Loser)
character_event = {
	id = hde_regent.302
	desc = hde_regent.302.desc
	picture = GFX_evt_duel2
	border = GFX_event_normal_frame_war
	is_triggered_only = yes

	option = {
		name = hde_regent.302.a
		
		hidden_tooltip = {
			e_rebels = { # Send handler to referee
				holder_scope = {
					character_event = { id = hde_core.8 }
				}
			}
		}
	}
}
# Defender pretends to leave an opening and gets attacked (Sent to Winner)
character_event = {
	id = hde_regent.303
	desc = hde_regent.303.desc
	picture = GFX_evt_duel2
	border = GFX_event_normal_frame_war
	is_triggered_only = yes

	option = {
		name = hde_regent.303.a
		
		hidden_tooltip = {
			FROM = { # Send bounce event to Loser
				character_event = { id = hde_core.9 }
			}
		}
	}
}

## Chain 2
# Would be here, if Chain 2 existed

#####################
### SUBDUED OUTCOME FLAVOR
### 400-499 reserved
## Chain 1
# Aggressor disarms Defender (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_regent.400
	desc = hde_regent.400.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.400.a
		
		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.402 tooltip = hde.reacts }
		}
	}
}
# Defender disarms Aggressor (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_regent.401
	desc = hde_east.401.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.401.a
		
		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.403 tooltip = hde.reacts }
		}
	}
}
# Defender gets overwhelmed (FROM = Winner)
character_event = {
	id = hde_regent.402
	desc = hde_regent.402.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_regent.402.a
		ai_chance = {
			factor = 50
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		FROM = { # Winner considers yield
			character_event = { id = hde_regent.404 tooltip = hde.consider_yield }
		}
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_regent.402.b
		ai_chance = { factor = 50 }
		
		FROM = { # Send to Winner
			character_event = { id = hde_regent.407 tooltip = hde.reacts }
		}
	}
}
# Aggressor gets overwhelmed (FROM = Winner)
character_event = {
	id = hde_regent.403
	desc = hde_regent.403.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_regent.403.a
		ai_chance = {
			factor = 50
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		FROM = { # Winner considers yield
			character_event = { id = hde_regent.404 tooltip = hde.consider_yield }
		}
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_regent.403.b
		ai_chance = { factor = 50 }
		
		FROM = { # Send to Winner
			character_event = { id = hde_regent.407 tooltip = hde.reacts }
		}
	}
}
# Winner considers Loser's yield (FROM = Loser)
character_event = {
	id = hde_regent.404
	desc = hde_regent.404.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = { # Spare Loser
		name = hde_regent.404.a
		ai_chance = {
			factor = 50
			# Need Opponent Taken Alive
			modifier = {
				factor = 10
				any_current_enemy = { character = FROM }
				NOT = {
					OR = {
						trait = lunatic
						trait = possessed
					}
				}
				NOT = {
					OR = {
						trait = wroth
						trait = cruel
						trait = paranoid
					}
				}
				NOT = { #republic feuders
					has_dynasty_flag = the_feuders
					FROM = { has_dynasty_flag = the_victims }
				}
				NOT = {
					has_dynasty_flag = the_victims
					FROM = { has_dynasty_flag = the_feuders }
				}
			}
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personal Opinion Modifiers
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -99 } }
			}
			# Would Be Kinslaying
			modifier = {
				factor = 10
				FROM = { is_close_relative = ROOT }
				NOT = { trait = arbitrary }
			}
			modifier = {
				factor = 20
				FROM = { is_close_relative = ROOT }
				trait = just
			}
			# Personality Modifiers
			modifier = {
				factor = 5
				trait = kind
			}
			modifier = {
				factor = 2
				trait = gregarious
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.25
				trait = trusting
			}
			modifier = {
				factor = 0.8
				trait = paranoid
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = wroth
			}
			modifier = {
				factor = 0.2
				trait = cruel
			}
			modifier = {
				factor = 50
				has_character_flag = flag_duel_friendly
				NOT = {
					OR = {
						trait = lunatic
						trait = possessed
					}
					OR = {
						trait = cruel
						trait = wroth
					}
				}
			}
		}
		
		set_character_flag = flag_duel_spared_opponent
		prestige = 15
		FROM = { # Send to Loser
			character_event = { id = hde_regent.405 tooltip = hde.is_defeated }
		}
	}
	option = { # Kill Loser
		name = hde_regent.404.b
		ai_chance = {
			factor = 50
			# Friendly Duels
			modifier = {
				factor = 0
				has_character_flag = flag_duel_friendly
				NOT = {
					OR = {
						AND = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
							plot_target_char = { character = FROM }
						}
						any_backed_character = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
							plot_target_char = { character = FROM }
						}
						AND = { #republic feuders
							has_dynasty_flag = the_feuders
							FROM = { has_dynasty_flag = the_victims }
						}
						AND = {
							has_dynasty_flag = the_victims
							FROM = { has_dynasty_flag = the_feuders }
						}
						AND = {
							OR = {
								trait = envious
								trait = ambitious
							}
							NOT = { trait = content }
							OR = {
								any_heir_title = { holder = ROOT }
								any_pretender_title = { holder = ROOT }
								any_pretender_title = { current_heir = { character = ROOT } }
							}
						}
					}
				}
			}
		}
		
		set_character_flag = flag_duel_killed_opponent
		FROM = { # Send to Loser
			character_event = { id = hde_regent.406 tooltip = hde.is_slain }
		}
	}
}
# Loser informed of being spared (FROM = Winner)
character_event = {
	id = hde_regent.405
	desc = hde_regent.405.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = {
		name = hde_regent.405.a

		prestige = -10
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
	option = {
		name = hde_regent.405.b

		prestige = -10
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
}
# Loser informed of own death (FROM = Winner)
character_event = {
	id = hde_regent.406
	desc = hde_regent.406.desc
	picture = GFX_evt_duel5
	is_triggered_only = yes
	
	option = {
		trigger = {
			spouse = {
				NOT = { is_lover = ROOT }
			}
			NOT = { trait = zealous }
		}
		name = hde_regent.406.a

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
	option = {
		trigger = {
			spouse = { is_lover = ROOT }
		}
		name = hde_regent.406.b

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
	option = {
		trigger = { trait = zealous }
		name = hde_regent.406.c

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
}
# Winner injures subdued, unyielding Loser (FROM = Loser)
character_event = {
	id = hde_regent.407
	desc = hde_regent.407.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		trigger = {
			NOT = { FROMFROM = { trait = wounded } }
			NOT = { FROMFROM = { trait = maimed } }
		}
		name = hde_regent.407.a
		FROMFROM = { character_event = { id = hde_regent.502 tooltip = hde.is_wounded } }
	}
	option = {
		trigger = {
			FROMFROM = { trait = wounded }
		}
		name = hde_regent.407.a
		FROMFROM = { character_event = { id = hde_regent.503 tooltip = hde.is_maimed } }
	}
}

## Chain 2
# Would be here, if Chain 2 existed

#####################
### WOUNDED OUTCOME FLAVOR
### 500-599 reserved
## Chain 1
# Aggressor injures Defender (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_regent.500
	desc = hde_regent.500.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes

	option = {
		trigger = {
			NOT = { FROMFROM = { trait = wounded } }
			NOT = { FROMFROM = { trait = maimed } }
		}
		name = hde_regent.500.a
		FROMFROM = { character_event = { id = hde_regent.502 tooltip = hde.is_wounded } }
	}
	option = {
		trigger = {
			FROMFROM = { trait = wounded }
		}
		name = hde_regent.500.b
		FROMFROM = { character_event = { id = hde_regent.503 tooltip = hde.is_maimed } }
	}
	option = {
		trigger = {
			FROMFROM = { trait = maimed }
		}
		name = hde_regent.500.c
		FROMFROM = { character_event = { id = hde_regent.504 tooltip = hde.is_incapable } }
	}
}
# Defender injures Aggressor (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_regent.501
	desc = hde_regent.501.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes

	option = {
		trigger = {
			NOT = { FROMFROM = { trait = wounded } }
			NOT = { FROMFROM = { trait = maimed } }
		}
		name = hde_regent.501.a
		FROMFROM = { character_event = { id = hde_regent.502 tooltip = hde.is_wounded } }
	}
	option = {
		trigger = {
			FROMFROM = { trait = wounded }
		}
		name = hde_regent.501.b
		FROMFROM = { character_event = { id = hde_regent.503 tooltip = hde.is_maimed } }
	}
	option = {
		trigger = {
			FROMFROM = { trait = maimed }
		}
		name = hde_regent.501.c
		FROMFROM = { character_event = { id = hde_regent.504 tooltip = hde.is_incapable } }
	}
}
# Loser is injured (FROM = Winner)
character_event = {
	id = hde_regent.502
	desc = hde_regent.502.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	immediate = {
		FROM = { set_character_flag = flag_duel_wounded_opponent }
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_regent.502.a
		ai_chance = { factor = 70 }
		
		add_trait = wounded
		# Restart the fight
		custom_tooltip = {
			text = hde.battle_continues
			hidden_tooltip = { FROM = { character_event = { id = hde_core.0 } } }
		}
	}
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_regent.502.b
		ai_chance = {
			factor = 30
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		add_trait = wounded
		prestige = -10
		FROM = { # Winner considers yield
			character_event = { id = hde_regent.404 tooltip = hde.consider_yield }
		}
	}
}
# Loser is maimed (FROM = Winner)
character_event = {
	id = hde_regent.503
	desc = hde_regent.503.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	immediate = {
		FROM = { set_character_flag = flag_duel_maimed_opponent }
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_regent.503.a
		ai_chance = { factor = 70 }
		
		add_trait = maimed
		# Restart the fight
		custom_tooltip = {
			text = hde.battle_continues
			hidden_tooltip = { FROM = { character_event = { id = hde_core.0 } } }
		}
	}
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_regent.503.b
		ai_chance = {
			factor = 30
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		add_trait = maimed
		prestige = -10
		FROM = { # Winner considers yield
			character_event = { id = hde_regent.404 tooltip = hde.consider_yield }
		}
	}
}
# Loser is mortally wounded, fight is over (FROM = Winner)
character_event = {
	id = hde_regent.504
	desc = hde_regent.504.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	option = {
		name = hde_regent.504.a
		
		add_trait = incapable
		FROM = {
			set_character_flag = flag_duel_neutralized_opponent
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
}

## Chain 2
# Would be here, if Chain 2 existed

#####################
### KILLED OUTCOME FLAVOR
### 600-699 reserved
# Aggressor kills Defender! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_regent.600
	desc = hde_regent.600.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.600.a

		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.602 tooltip = hde.is_slain }
		}
	}
	option = {
		name = hde_regent.600.b

		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.602 tooltip = hde.is_slain }
		}
	}
}
# Defender kills Aggressor! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_regent.601
	desc = hde_regent.601.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = {
		name = hde_regent.601.a

		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.602 tooltip = hde.is_slain }
		}
	}
	option = {
		name = hde_regent.601.b

		FROMFROM = { # Send to Loser
			character_event = { id = hde_regent.602 tooltip = hde.is_slain }
		}
	}
}
# Loser is killed (FROM = Winner)
character_event = {
	id = hde_regent.602
	desc = hde_regent.602.desc
	picture = GFX_evt_duel3
	is_triggered_only = yes
	
	option = {
		trigger = {
			spouse = {
				NOT = { is_lover = ROOT }
			}
			NOT = { trait = zealous }
		}
		name = hde_regent.602.a

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			set_character_flag = flag_duel_killed_opponent
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
	option = {
		trigger = {
			spouse = { is_lover = ROOT }
		}
		name = hde_regent.602.b

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			set_character_flag = flag_duel_killed_opponent
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
	option = {
		trigger = { trait = zealous }
		name = hde_regent.602.c

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			set_character_flag = flag_duel_killed_opponent
			character_event = { id = hde_core.10 tooltip = hde.is_victorious }
		}
	}
}

## Chain 2
# Would be here, if Chain 2 existed

#####################
### OUTPUT FLAVOR
### 700-799 reserved
# Unlike the NDE version, there's no to_the_death flag, so we get the full variation of outcomes
# These are all pulled from vanilla CK2
## Chain 1

## Chain 2
# Would be here, if Chain 2 existed