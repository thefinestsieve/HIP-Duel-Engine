namespace = hde_battle

### FLAVOR EVENTS
# Each of these chains needs to have two header events, one for Winner = ROOT and one for Loser = ROOT
# Opponent is FROMFROM in former, FROM in latter
# Subsequent events in the chain can be interchangeable (like 200-202) or unique (like 100-104)

# If a chain ends with the Loser getting the last event, it should send the appropriate handler event to the Winner
# If it ends with the Winner getting the last event, it should send the appropriate bounce event to the Loser
# Localization for these events should generally be written in the roles of Aggressor and Defender
# The exception is the case of Outcome flavor, where it's written in the roles of Winner and Loser

# In the case of Combat flavor, the event chains always end with the Winner winning, whether they're aggressor or defender. So they generally require more events (rather like Initial flavor)
# Combat flavor that ends with the Loser getting the last event in the chain should send the Outcome handler to e_rebels, but if it ends with the Winner then the Outcome bounce event should be sent to the Loser

## FAILURE FLAVOR
# Not sure if necessary yet

### SETUP
## 0-99 reserved
# These events are only required if there aren't already existing events to plug into
# hde_battle.0		Begin the chain, triggered from on_actions
# hde_battle.1		Pass along event, starts the actual fight
character_event = {
    id = hde_battle.0
    hide_window = yes
    
    is_triggered_only = yes
	
	# Filter out characters who are blind?
    
    trigger = {
        # Avoid crossing targets
        FROM = {
            liege = {
                OR = {
                    any_realm_character = {
                        in_battle = yes
                        at_location = ROOT
                        NOT = { has_character_modifier = battlefield_fight }
                    }
					AND = {
						in_battle = yes
						at_location = ROOT
						NOT = { has_character_modifier = battlefield_fight }
					}
                }
            }
        }
        NOT = { has_character_modifier = battlefield_fight }
    }
    
    weight_multiplier = {
        days = 1
        modifier = {
            factor = 1.5
            trait = trained_warrior
        }
        modifier = {
            factor = 1.75
            trait = skilled_warrior
        }
        modifier = {
            factor = 2
            trait = master_warrior
        }
        modifier = {
            factor = 3
            trait = duelist
        }
        modifier = {
            factor = 1.5
            trait = brave
        }
        modifier = {
            factor = 0.5
            trait = craven
        }
    }
    
    immediate = {
        # Target lock
        add_character_modifier = {
            name = battlefield_fight
            duration = 20
        }
        FROM = {
            liege = {
                if = {
                    limit = {
                        NOT = {
                            in_battle = yes
                            at_location = ROOT
                            NOT = { has_character_modifier = battlefield_fight }
                        }
						any_realm_character = {
							in_battle = yes
							at_location = ROOT
							NOT = { has_character_modifier = battlefield_fight }
						}
                    }
                    random_realm_character = {
                        limit = {
                            in_battle = yes
                            at_location = ROOT
                            NOT = { has_character_modifier = battlefield_fight }
                        }
                        opinion = { who = ROOT modifier = opinion_battle_duel_target }
                        reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                        add_character_modifier = {
                            name = battlefield_fight
                            duration = 20
                        }
                    }
                    ROOT = { set_character_flag = duel_engaged }
                }
                if = {
                    limit = {
                        NOT = {
                            any_realm_character = {
                                in_battle = yes
                                at_location = ROOT
                                NOT = { has_character_modifier = battlefield_fight }
                            }
                        }
						in_battle = yes
						at_location = ROOT
						NOT = { has_character_modifier = battlefield_fight }
                    }
                    opinion = { who = ROOT modifier = opinion_battle_duel_target }
                    reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                    add_character_modifier = {
                        name = battlefield_fight
                        duration = 20
                    }
                    ROOT = { set_character_flag = duel_engaged }
                }
                if = {
                    limit = {
						NOT = { ROOT = { has_character_flag = duel_engaged } }
						any_realm_character = {
							in_battle = yes
							at_location = ROOT
							NOT = { has_character_modifier = battlefield_fight }
						}
						in_battle = yes
						at_location = ROOT
						NOT = { has_character_modifier = battlefield_fight }
					}
                    random_list = {
                        10 = {
                            opinion = { who = ROOT modifier = opinion_battle_duel_target }
                            reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                            add_character_modifier = {
                                name = battlefield_fight
                                duration = 20
                            }
                        }
                        90 = {
                            random_realm_character = {
                                limit = {
                                    in_battle = yes
                                    at_location = ROOT
                                    NOT = { has_character_modifier = battlefield_fight }
                                }
                                opinion = { who = ROOT modifier = opinion_battle_duel_target }
                                reverse_opinion = { who = ROOT modifier = opinion_battle_duel_target }
                                add_character_modifier = {
                                    name = battlefield_fight
                                    duration = 20
                                }
                            }
                        }
                    }
                }
            }
        }
        clr_character_flag = duel_engaged
		FROM = {
            liege = {
                random_realm_character = {
                    limit = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } }
					hidden_tooltip = { character_event = { id = hde_battle.1 } }
                }
                if = {
                    limit = { has_opinion_modifier = { who = ROOT modifier = opinion_battle_duel_target } }
                    hidden_tooltip = { character_event = { id = hde_battle.1 } }
                }
            }
        }
    }
    
    option = {
        name = OK
    }
}

# Passing it right along...
character_event = {
	id = hde_battle.1
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		# Remove initial targeting information
		remove_opinion = { who = FROM modifier = opinion_battle_duel_target }
		reverse_remove_opinion = { who = FROM modifier = opinion_battle_duel_target }
		
		# Set duel type
		set_character_flag = flag_battlefield_duel
		FROM = { set_character_flag = flag_battlefield_duel }
		
		# Start this thing!
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = hde_core.0 } } } }
	}
	
	option = {
		name = OK
	}
}

### FLAVOR EVENTS
#####################
## INITIAL FLAVOR
## 100-199 reserved
# I'd like to give cowards a chance to become brave if they choose to fight.
# Or at least a chance to lose craven.
# Chain 1
# Aggressor attacks or not! (ROOT = Winner)
character_event = {
	id = hde_battle.100
	desc = hde_battle.100.desc
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.100.a # Charge!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 3
				trait = poor_warrior
			}
			modifier = {
				factor = 5
				trait = trained_warrior
			}
			modifier = {
				factor = 7
				trait = skilled_warrior
			}
			modifier = {
				factor = 9
				trait = master_warrior
			}
			modifier = {
				factor = 3
				trait = duelist
			}
			modifier = {
				factor = 10
				trait = brave
			}
			modifier = {
				factor = 5
				trait = proud
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 1.5
				trait = strong
			}
		}
		
		FROMFROM = { # Send to loser
			character_event = { id = hde_battle.102 tooltip = hde_battle.102.tt }
		}
	}
	
	option = {
		name = hde_battle.100.b # NOPE!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 2
				FROMFROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 3
				FROMFROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 4
				FROMFROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 5
				FROMFROM = { trait = master_warrior }
			}
			modifier = {
				factor = 3
				FROMFROM = { trait = duelist }
			}
			modifier = {
				factor = 2
				FROMFROM = { trait = strong }
			}
			modifier = {
				factor = 10
				trait = craven
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = weak
			}
			modifier = {
				factor = 2
				trait = dwarf
			}
			modifier = {
				factor = 2
				trait = hunchback
			}
			modifier = {
				factor = 2
				trait = leper
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 10
				trait = blinded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
		}

		if = {
			limit = {
				FROMFROM = {
					NOT = { trait = poor_warrior }
					NOT = { trait = trained_warrior }
					NOT = { trait = skilled_warrior }
					NOT = { trait = master_warrior }
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 25
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROMFROM = {
					trait = poor_warrior
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 20
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROMFROM = {
					trait = trained_warrior
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 15
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROMFROM = {
					trait = skilled_warrior
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 10
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROMFROM = {
					trait = master_warrior
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 5
				add_trait = craven
			}
		}
		morale = -0.1
		hidden_tooltip = {
			FROMFROM = { # Send to defender
				character_event = { id = hde_battle.103 }
			}
		}
	}
}
# Aggressor attacks or not! (ROOT = Loser)
character_event = {
	id = hde_battle.101
	desc = hde_battle.100.desc
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.100.a # Charge!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 3
				trait = poor_warrior
			}
			modifier = {
				factor = 5
				trait = trained_warrior
			}
			modifier = {
				factor = 7
				trait = skilled_warrior
			}
			modifier = {
				factor = 9
				trait = master_warrior
			}
			modifier = {
				factor = 3
				trait = duelist
			}
			modifier = {
				factor = 10
				trait = brave
			}
			modifier = {
				factor = 5
				trait = proud
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 1.5
				trait = strong
			}
		}

		FROM = { # Send to winner
			character_event = { id = hde_battle.102 tooltip = hde_battle.102.tt }
		}
	}
	
	option = {
		name = hde_battle.100.b # NOPE!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 2
				FROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 4
				FROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 5
				FROM = { trait = master_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = duelist }
			}
			modifier = {
				factor = 2
				FROM = { trait = strong }
			}
			modifier = {
				factor = 10
				trait = craven
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = weak
			}
			modifier = {
				factor = 2
				trait = dwarf
			}
			modifier = {
				factor = 2
				trait = hunchback
			}
			modifier = {
				factor = 2
				trait = leper
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 10
				trait = blinded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
		}
		
		if = {
			limit = {
				FROM = {
					NOT = { trait = poor_warrior }
					NOT = { trait = trained_warrior }
					NOT = { trait = skilled_warrior }
					NOT = { trait = master_warrior }
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 25
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = poor_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 20
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = trained_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 15
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = skilled_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 10
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = master_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 5
				add_trait = craven
			}
		}
		morale = -0.1
		hidden_tooltip = {
			FROM = { # Send to defender
				character_event = { id = hde_battle.103 }
			}
		}
	}
}
# Defender fights or not! (Sent to Winner or Loser)
character_event = {
	id = hde_battle.102
	desc = hde_battle.102.desc
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.102.a # Let's fight!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 3
				trait = poor_warrior
			}
			modifier = {
				factor = 5
				trait = trained_warrior
			}
			modifier = {
				factor = 7
				trait = skilled_warrior
			}
			modifier = {
				factor = 9
				trait = master_warrior
			}
			modifier = {
				factor = 3
				trait = duelist
			}
			modifier = {
				factor = 10
				trait = brave
			}
			modifier = {
				factor = 5
				trait = proud
			}
			modifier = {
				factor = 1.5
				trait = wroth
			}
			modifier = {
				factor = 1.5
				trait = strong
			}
		}
		
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.3 tooltip = hde_core.3.tt }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.4 tooltip = hde_core.4.tt }
			}
		}
	}
	
	option = {
		name = hde_battle.102.b # I'm outta here!
		ai_chance = {
			factor = 100
			modifier = {
				factor = 2
				FROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 4
				FROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 5
				FROM = { trait = master_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = duelist }
			}
			modifier = {
				factor = 2
				FROM = { trait = strong }
			}
			modifier = {
				factor = 10
				trait = craven
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 2
				trait = weak
			}
			modifier = {
				factor = 2
				trait = dwarf
			}
			modifier = {
				factor = 2
				trait = hunchback
			}
			modifier = {
				factor = 2
				trait = leper
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
			modifier = {
				factor = 10
				trait = blinded
				NOT = { trait = lunatic }
				NOT = { trait = brave }
				NOT = { trait = proud }
				NOT = { trait = wroth }
			}
		}
		
		if = {
			limit = {
				FROM = {
					NOT = { trait = poor_warrior }
					NOT = { trait = trained_warrior }
					NOT = { trait = skilled_warrior }
					NOT = { trait = master_warrior }
				}
				NOT = { trait = craven }
			}
			random = {
				chance = 25
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = poor_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 20
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = trained_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 15
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = skilled_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 10
				add_trait = craven
			}
		}
		if = {
			limit = {
				FROM = { trait = master_warrior }
				NOT = { trait = craven }
			}
			random = {
				chance = 5
				add_trait = craven
			}
		}
		morale = -0.1
		hidden_tooltip = {
			FROM = { # Send to aggressor
				character_event = { id = hde_battle.104 }
			}
		}
	}
}
# Aggressor chickens out (Sent to Winner or Loser)
character_event = {
	id = hde_battle.103
	desc = hde_battle.103.desc
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.103.a # Yeah, he'd better run!

		morale = 0.1
		hidden_tooltip = {
			FROM = { # Time for cleanup
				character_event = { id = hde_core.10 }
			}
		}
	}
}
# Defender chickens out (Sent to Winner or Loser)
character_event = {
	id = hde_battle.104
	desc = hde_battle.104.desc
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.104.a # Yeah, that's what I thought...

		morale = 0.1
		hidden_tooltip = {
			FROM = { # Time for cleanup
				character_event = { id = hde_core.10 }
			}
		}
	}
}

# Chain 2
# Would be here, if Chain 2 existed

#####################
## SIZING UP FLAVOR
## 200-299 reserved
# Going to add support here for "tired" versions by tagging characters who've been through the loop more than once
# Chain 1
# Aggressor circles... (ROOT = Winner)
character_event = {
	id = hde_battle.200
	desc = hde_battle.200.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.200.a
		
		hidden_tooltip = {
			FROMFROM = { # Send to Loser
				character_event = { id = hde_battle.201 }
			}
		}
	}
}
# Aggressor circles... (ROOT = Loser)
character_event = {
	id = hde_battle.201
	desc = hde_battle.200.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.200.a
		
		hidden_tooltip = {
			FROM = { # Send to Winner
				character_event = { id = hde_battle.201 }
			}
		}
	}
}
# Defender circles...
character_event = {
	id = hde_battle.202
	desc = hde_battle.202.desc
	picture = GFX_evt_duel0
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.202.a
		if = {
			limit = { has_character_flag = flag_duel_loser }
			FROM = { # Send handler to Winner
				character_event = { id = hde_core.5 tooltip = hde_core.5.tt }
			}
		}
		if = {
			limit = { has_character_flag = flag_duel_winner }
			FROM = { # Send handler bounce to Loser
				character_event = { id = hde_core.6 tooltip = hde_core.6.tt }
			}
		}
	}
}

# Chain 2
# Would be here, if Chain 2 existed

#####################
## COMBAT FLAVOR
## 300-399 reserved
# Chain 1
# Aggressor attacks! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_battle.300
	desc = hde_battle.300.desc
	picture = GFX_evt_duel1
	border = GFX_event_normal_frame_war
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.300.a

		FROMFROM = { # Send to Loser
			character_event = { id = hde_battle.302 tooltip = hde_battle.302.tt }
		}
	}
}
# Aggressor attacks! (ROOT = Loser, Opponent = FROM)
character_event = {
	id = hde_battle.301
	desc = hde_battle.301.desc
	picture = GFX_evt_duel1
	border = GFX_event_normal_frame_war
	hide_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.301.a
		
		FROM = { # Send to Winner
			character_event = { id = hde_battle.303 tooltip = hde_battle.303.tt }
		}
	}
}
# Defender fails save roll (Sent to Loser)
character_event = {
	id = hde_battle.302
	desc = hde_battle.302.desc
	picture = GFX_evt_duel2
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes

	option = {
		name = hde_battle.302.a
		
		hidden_tooltip = {
			e_rebels = { # Send handler to referee
				holder_scope = {
					character_event = { id = hde_core.7 }
				}
			}
		}
	}
}
# Defender wins save roll (Sent to Winner)
character_event = {
	id = hde_battle.303
	desc = hde_battle.303.desc
	picture = GFX_evt_duel2
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes

	option = {
		name = hde_battle.303.a
		
		hidden_tooltip = {
			FROM = { # Send bounce event to Loser
				character_event = { id = hde_core.8 }
			}
		}
	}
}

# Chain 2
# Would be here, if Chain 2 existed

### OUTCOME FLAVOR
# The chains for this are larger and intended to be self-consistent, so if Chain 1 subdued event is called, it's going to reference the Chain 1 yield event and, if the Loser won't yield, the Chain 1 wounded event. If the Loser does yield, and Winner kills the Loser, it'll reference the Chain 1 death event. Those wounded and death events are the same ones called directly if the Chain 1 wounded or death outcomes are chosen by the handler. This should prevent redundant events while also making sure the flavor for each chain is consistent with itself.
#####################
## SUBDUED OUTCOME FLAVOR
## 400-499 reserved
# Unlike the other handlers, in these the winner always gets the first event
# Chain 1
# Aggressor subdues Defender! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_battle.400
	desc = hde_battle.400.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.400.a
		
		FROMFROM = { # Send to Loser
			character_event = { id = hde_battle.402 tooltip = hde_battle.402.tt }
		}
	}
}
# Defender subdues Aggressor! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_battle.401
	desc = hde_battle.401.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = hde_battle.401.a
		
		FROMFROM = { # Send to Loser
			character_event = { id = hde_battle.403 tooltip = hde_battle.403.tt }
		}
	}
}
# Defender gets overwhelmed! (Loser = FROM)
character_event = {
	id = hde_battle.402
	desc = hde_battle.402.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_battle.402.a
		ai_chance = {
			factor = 50
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		FROM = { # Winner considers yield
			character_event = { id = hde_battle.404 tooltip = hde_battle.404.tt }
		}
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_battle.402.b
		ai_chance = { factor = 50 }
		
		FROM = { # Send to Winner
			character_event = { id = hde_battle.407 tooltip = hde_battle.407.tt }
		}
	}
}
# Aggressor gets overwhelmed! (Loser = FROM)
character_event = {
	id = hde_battle.403
	desc = hde_battle.403.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_battle.403.a
		ai_chance = {
			factor = 50
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		FROM = { # Winner considers yield
			character_event = { id = hde_battle.404 tooltip = hde_battle.404.tt }
		}
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_battle.403.b
		ai_chance = { factor = 50 }
		
		FROM = { # Send to Winner
			character_event = { id = hde_battle.407 tooltip = hde_battle.407.tt }
		}
	}
}
# Winner considers Loser's yield (Loser = FROM)
character_event = {
	id = hde_battle.404
	desc = hde_battle.404.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = { # Spare Loser
		name = hde_battle.404.a
		ai_chance = {
			factor = 50
			# Need Opponent Taken Alive
			modifier = {
				factor = 10
				any_current_enemy = { character = FROM }
				NOT = {
					OR = {
						trait = lunatic
						trait = possessed
					}
				}
				NOT = {
					OR = {
						trait = wroth
						trait = cruel
						trait = paranoid
					}
				}
				NOT = { #republic feuders
					has_dynasty_flag = the_feuders
					FROM = { has_dynasty_flag = the_victims }
				}
				NOT = {
					has_dynasty_flag = the_victims
					FROM = { has_dynasty_flag = the_feuders }
				}
			}
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personal Opinion Modifiers
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -99 } }
			}
			# Would Be Kinslaying
			modifier = {
				factor = 10
				FROM = { is_close_relative = ROOT }
				NOT = { trait = arbitrary }
			}
			modifier = {
				factor = 20
				FROM = { is_close_relative = ROOT }
				trait = just
			}
			# Personality Modifiers
			modifier = {
				factor = 5
				trait = kind
			}
			modifier = {
				factor = 2
				trait = gregarious
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 1.25
				trait = trusting
			}
			modifier = {
				factor = 0.8
				trait = paranoid
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = wroth
			}
			modifier = {
				factor = 0.2
				trait = cruel
			}
			modifier = {
				factor = 50
				has_character_flag = flag_duel_friendly
				NOT = {
					OR = {
						trait = lunatic
						trait = possessed
					}
					OR = {
						trait = cruel
						trait = wroth
					}
				}
			}
		}
		
		set_character_flag = flag_duel_spared_opponent
		prestige = 15
		FROM = { # Send to Loser
			character_event = { id = hde_battle.405 tooltip = hde_battle.405.tt }
		}
	}
	option = { # Kill Loser
		name = hde_battle.404.b
		ai_chance = {
			factor = 50
			# Friendly Duels
			modifier = {
				factor = 0
				has_character_flag = flag_duel_friendly
				NOT = {
					OR = {
						AND = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
							plot_target_char = { character = FROM }
						}
						any_backed_character = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
							plot_target_char = { character = FROM }
						}
						AND = { #republic feuders
							has_dynasty_flag = the_feuders
							FROM = { has_dynasty_flag = the_victims }
						}
						AND = {
							has_dynasty_flag = the_victims
							FROM = { has_dynasty_flag = the_feuders }
						}
						AND = {
							OR = {
								trait = envious
								trait = ambitious
							}
							NOT = { trait = content }
							OR = {
								any_heir_title = { holder = ROOT }
								any_pretender_title = { holder = ROOT }
								any_pretender_title = { current_heir = { character = ROOT } }
							}
						}
					}
				}
			}
		}
		
		set_character_flag = flag_duel_killed_opponent
		FROM = { # Send to Loser
			character_event = { id = hde_battle.406 tooltip = hde_battle.406.tt }
		}
	}
}
# Loser informed of being spared (Winner = FROM)
character_event = {
	id = hde_battle.405
	desc = hde_battle.405.desc
	picture = GFX_evt_duel4
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = {
		name = hde_battle.405.a

		prestige = -10
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.9 tooltip = hde_core.9.tt }
		}
	}
}
# Loser informed of own death (Winner = FROM)
character_event = {
	id = hde_battle.406
	desc = hde_battle.406.desc
	picture = GFX_evt_duel5

	is_triggered_only = yes
	
	option = {
		name = hde_battle.406.a

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { # Send Output to Winner
			character_event = { id = hde_core.9 tooltip = hde_core.9.tt }
		}
		# hidden_tooltip = { FROM = { character_event = { id = duel.203 } } }
	}
}
# Winner injures subdued, unyielding Loser (FROM = Loser)
character_event = {
	id = hde_battle.407
	desc = hde_battle.407.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = {
		name = hde_battle.407.a

		if = {
			limit = {
				FROMFROM = {
					NOT = { trait = wounded }
					NOT = { trait = maimed }
				}
			}
			FROMFROM = { # Send to wounded event to Loser
				character_event = { id = hde_battle.502 tooltip = hde_battle.502.tt }
			}
		}
		if = {
			limit = {
				FROMFROM = { trait = wounded }
			}
			FROMFROM = { # Send maimed event to Loser
				character_event = { id = hde_battle.503 tooltip = hde_battle.503.tt }
			}
		}
	}
}

# Chain 2
# Would be here, if Chain 2 existed

#####################
## WOUNDED OUTCOME FLAVOR
## 500-599 reserved
# Unlike the other handlers, in these the winner always gets the first event
# Chain 1
# Aggressor injures Defender! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_battle.500
	desc = hde_battle.500.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes

	is_triggered_only = yes
	
	option = {
		name = hde_battle.500.a
		
		if = {
			limit = {
				FROMFROM = {
					NOT = { trait = wounded }
					NOT = { trait = maimed }
				}
			}
			FROMFROM = { # Send to wounded event to Loser
				character_event = { id = hde_battle.502 tooltip = hde_battle.502.tt }
			}
		}
		if = {
			limit = {
				FROMFROM = { trait = wounded }
			}
			FROMFROM = { # Send maimed event to Loser
				character_event = { id = hde_battle.503 tooltip = hde_battle.503.tt }
			}
		}
	}
}
# Defender injures Aggressor! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = hde_battle.501
	desc = hde_battle.501.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes

	is_triggered_only = yes
	
	option = {
		name = hde_battle.501.a

		if = {
			limit = {
				FROMFROM = {
					NOT = { trait = wounded }
					NOT = { trait = maimed }
				}
			}
			FROMFROM = { # Send to wounded event to Loser
				character_event = { id = hde_battle.502 tooltip = hde_battle.502.tt }
			}
		}
		if = {
			limit = {
				FROMFROM = { trait = wounded }
			}
			FROMFROM = { # Send maimed event to Loser
				character_event = { id = hde_battle.503 tooltip = hde_battle.503.tt }
			}
		}
	}
}
# Loser is injured (FROM = Winner)
character_event = {
	id = hde_battle.502
	desc = hde_battle.502.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	immediate = {
		FROM = { set_character_flag = flag_duel_wounded_opponent }
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_battle.502.a
		ai_chance = { factor = 70 }
		
		add_trait = wounded
		# Restart the fight
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = hde_core.0 } } } }
	}
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_battle.502.b
		ai_chance = {
			factor = 30
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		add_trait = wounded
		prestige = -10
		FROM = { # Winner considers yield
			character_event = { id = hde_battle.404 tooltip = hde_battle.404.tt }
		}
	}
}
# Loser is maimed (FROM = Winner)
character_event = {
	id = hde_battle.503
	desc = hde_battle.503.desc
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	immediate = {
		FROM = { set_character_flag = flag_duel_maimed_opponent }
	}
	
	option = { # Fight On
		trigger = {
			NOT = { has_character_flag = flag_duel_friendly }
		}
		name = hde_battle.503.a
		ai_chance = { factor = 70 }
		
		add_trait = maimed
		# Restart the fight
		hidden_tooltip = { e_rebels = { holder_scope = { character_event = { id = hde_core.0 } } } }
	}
	option = { # Yield
		trigger = {
			OR = {
				has_character_flag = flag_duel_friendly
				NOT = { has_character_flag = flag_duel_to_the_death }
			}
		}
		name = hde_battle.503.b
		ai_chance = {
			factor = 30
			# Nearly Beaten!
			modifier = {
				factor = 4
				trait = maimed
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 2
				trait = wounded
				NOT = { trait = lunatic }
			}
			# Opponent Nearly Beaten!
			modifier = {
				factor = 0.25
				FROM = { trait = maimed }
				NOT = { trait = lunatic }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = wounded }
				NOT = { trait = lunatic }
			}
			# Personality Effects
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 1.25
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 0.8
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = wroth
			}
		}

		add_trait = maimed
		prestige = -10
		FROM = { # Winner considers yield
			character_event = { id = hde_battle.404 tooltip = hde_battle.404.tt }
		}
	}
}

# Chain 2

#####################
## KILLED OUTCOME FLAVOR
## 600-699 reserved
# Unlike the other handlers, in these the winner always gets the first event
# Aggressor kills Defender! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = duel.201
	desc = "EVTDESCDUEL201"
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes

	is_triggered_only = yes
	
	option = {
		name = "EVTOPTADUEL201"

		FROMFROM = { character_event = { id = duel.202 tooltip = "EVTTOOLTIPDUEL202" } }
	}
}
# Defender kills Aggressor! (ROOT = Winner, Opponent = FROMFROM)
character_event = {
	id = duel.201
	desc = "EVTDESCDUEL201"
	picture = GFX_evt_duel3
	border = GFX_event_normal_frame_war
	hide_from = yes
	show_from_from = yes

	is_triggered_only = yes
	
	option = {
		name = "EVTOPTADUEL201"

		FROMFROM = { character_event = { id = duel.202 tooltip = "EVTTOOLTIPDUEL202" } }
	}
}
# Loser is killed (FROM = Winner)
character_event = {
	id = duel.202
	desc = "EVTDESCDUEL202"
	picture = GFX_evt_duel3
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTADUEL202"

		if = {
			limit = {
				FROM = { is_close_relative = yes }
			}
			FROM = { add_trait = kinslayer }
		}
		death = {
			death_reason = death_duel
			killer = FROM
		}
		FROM = { set_character_flag = flag_killed_opponent }
		FROM = { # Send Output to Winner
			character_event = { id = duel_output.1 tooltip = "EVTTOOLTIPDUELOUTPUT1" }
		}
		# hidden_tooltip = { FROM = { character_event = { id = duel.203 } } }
	}
}

### OUTPUT FLAVOR
#####################
## OUTPUT FLAVOR
## 700-799 reserved
# Chain 1
# Winner killed Loser (Loser = FROMFROM)
character_event = {
	id = hde_battle.700
	desc = "EVTDESC5556100"
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = {
		name = "EVTOPTA5556100"
		
		prestige = 25
		random_current_enemy = {
			limit = { at_location = ROOT }
			morale = -0.2
		}
	}
}
# Winner spared Loser (Loser = FROMFROM)
character_event = {
	id = hde_battle.701
	desc = "EVTDESC5556101"
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = {
		name = "EVTOPTA5556101"
		
		hidden_tooltip = {
			FROMFROM = {
				character_event = { id = hde_battle.702 }
			}
		}
	}
}
# Loser is imprisoned (Winner = FROM)
character_event = {
	id = hde_battle.702
	desc = "EVTDESC5556102"
	picture = GFX_evt_battle
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	
	option = {
		name = "EVTOPTA5556102"
		
		imprison = FROM
		# set_character_flag = captured_in_battle
		hidden_tooltip = {
			FROM = {
				character_event = { 
					id = 50020 # "imprisoned_events.txt"
				}
			}
		}
	}
}

# Chain 2
# Would be here, if Chain 2 existed