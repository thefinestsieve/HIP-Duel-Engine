namespace = hde_core

# Based loosely on work by Galle (Gregory Hayes) and jordarkelf

### CONTEXT FLAGS
# Note that ALL duels are hostile (to the death) by default
# Set flag_duel_friendly if you don't want to kill folks
## Duel Type
# flag_duel_friendly
## Duel Flavor
# flag_duel_battlefield
# flag_duel_tourney (eventually?)

### MAIN EVENTS
# hde_core.0	Referee decides between FROM and FROMFROM, flags winner and loser, target locks duelists, sends winner first handler event
# hde_core.1	Bounce event to make sure localization works properly

### HANDLER EVENTS
# These can call different flavor depending on the flavor flags
# These all fire on ROOT, and the flavor events they trigger will pass the loser event by using the duel_target trait scope and accompanying opinion modifiers
# hde_core.2	Initial handler, random flavor events, lets participants decide whether to run or not
# hde_core.3	First clash handler, random flavor events
# hde_core.4	Combat handler, random flavor events, can be repeated, mid-fight wounding might happen here?
# hde_core.5	Outcome handler, random flavor events
# hde_core.6	Cleanup handler, cleans up flags, traits, and opinion modifiers, also fires failure flavor

# Outcome types: Loser is outright killed, loser is wounded, loser is subdued. If loser is wounded or subdued, they may be captured, killed, or let go. If loser is wounded but refuses to yield, repeat the loop, but with odds against the loser? (And risk of getting maimed.) If loser is subdued but refuses to yield, they get wounded, then the loop is repeated as before.

# Question: How are we going to check for failure states? What if one of the characters dies for some other reason? We'll need a failure event ("You lost track of your opponent in the heat of battle" sort of thing)?
# Question: Will we need a safety catch cleanup event?

### FLAVOR EVENTS
# These come in pairs, with winner and loser versions.
# If the event is sent to the winner, the winner's version sends an event to the loser, and the loser calls the handler again on the winner
# (This way all the localizations work)
# VERY IMPORTANT: Due to how this is designed, if the flavor events aren't sufficiently mixed up it might become possible for an observant player to tell whether they're going to win or lose by which flavor events they get
# So it's very important that flavor is jumbled up, such as by swapping up winner/loser text sometimes
# These will actually appear in a different file, but for reference purposes:
# x.x	Initial flavor
# x.x	First clash flavor
# x.x	Combat flavor
# x.x	Outcome flavor
# x.x	Failure flavor

### MAIN EVENTS
character_event = {
	id = hde_core.0
	# This might eventually be a hide_window = yes type event, but not for now
	desc = AI_EVENT
	picture = GFX_evt_duel0
	
	is_triggered_only = yes

	trigger = {
		has_landed_title = e_rebels
		# Probably should move everything below out of the event trigger and instead move it to the trigger of a special option which will fire failure and cleanup events
		FROM = { is_alive = yes }
		FROMFROM = { is_alive = yes }
		NOT = {
			OR = {
				FROM = { has_landed_title = e_rebels }
				FROMFROM = { has_landed_title = e_rebels }
			}
		}
	}

	# FROM wins
	option = {
		name = AI_EVENT
		ai_chance = {
			factor = 50
			# Skill-at-Arms Effects
			modifier = {
				factor = 3
				FROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 6
				FROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 9
				FROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 12
				FROM = { trait = master_warrior }
			}
			# Martial Education Effects
			modifier = {
				factor = 1.5
				FROM = { trait = misguided_warrior }
			}
			modifier = {
				factor = 3
				FROM = { trait = tough_soldier }
			}
			modifier = {
				factor = 4.5
				FROM = { trait = skilled_tactician }
			}
			modifier = {
				factor = 6
				FROM = { trait = brilliant_strategist }
			}
			# Various Martial Skills		
			modifier = {
				factor = 3
				FROM = { trait = duelist }
			}
			# Martial Skill
			modifier = {
				factor = 1.1
				FROM = { martial = 10 }
				NOT = { FROM = { martial = 15 } }
			}
			modifier = {
				factor = 1.3
				FROM = { martial = 15 }
				NOT = { FROM = { martial = 20 } }
			}
			modifier = {
				factor = 1.5
				FROM = { martial = 20 }
			}
			# Physical Strength Effects
			modifier = {
				factor = 2
				FROM = { trait = strong }
			}
			modifier = {
				factor = 2
				FROMFROM = { trait = weak }
			}
			# Cunning/Intelligence Effects
			modifier = {
				factor = 2
				FROM = { trait = genius }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = quick }
			}
			modifier = {
				factor = 2
				FROMFROM = { trait = imbecile }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = slow }
			}
			# Personality Effects
			modifier = {
				factor = 2
				FROM = { trait = brave }
			}
			modifier = {
				factor = 2
				FROM = { trait = wroth }
			}
			modifier = {
				factor = 2
				FROMFROM = { trait = craven }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = deceitful }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = honest }
			}
			# Wound Effects
			modifier = {
				factor = 2
				FROMFROM = { trait = wounded }
			}
			modifier = {
				factor = 4
				FROMFROM = { trait = maimed }
			}
			modifier = {
				factor = 10
				FROMFROM = { trait = blinded }
			}
			modifier = {
				factor = 999999
				FROMFROM = { trait = incapable }
			}
			# Health Effects
			modifier = {
				factor = 1.5
				FROMFROM = { trait = ill }
			}
			modifier = {
				factor = 2
				FROMFROM = { trait = pneumonic }
			}
			modifier = {
				factor = 8
				FROMFROM = { trait = leper }
			}
			modifier = {
				factor = 4
				FROMFROM = { trait = infirm }
			}
			modifier = {
				factor = 6
				OR = {
					FROMFROM = { trait = has_tuberculosis }
					FROMFROM = { trait = has_typhoid_fever }
					FROMFROM = { trait = has_typhus }
					FROMFROM = { trait = has_bubonic_plague }
					FROMFROM = { trait = has_measles }
					FROMFROM = { trait = has_small_pox }
					FROMFROM = { trait = has_aztec_disease }
				}
			}
			# Body Shape Effects
			modifier = {
				factor = 1.5
				FROM = { trait = tall }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = agile }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = perceptive }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = absentminded }
			}
			modifier = {
				factor = 4
				FROMFROM = { trait = hunchback }
			}
			modifier = {
				factor = 4
				FROMFROM = { trait = dwarf }
			}
			modifier = {
				factor = 4
				FROMFROM = { trait = clubfooted }
			}
			modifier = {
				factor = 2
				OR = {
					FROM = { trait = lefthanded }
					FROM = { trait = ambidextrous }
				}
				NOT = { FROMFROM = { trait = lefthanded } }
				NOT = { FROMFROM = { trait = ambidextrous } }
			}
			# Age Effects
			modifier = {
				factor = 2
				NOT = { FROMFROM = { age = 16 } }
			}
			modifier = {
				factor = 2
				NOT = { FROMFROM = { age = 12 } }
			}
			modifier = {
				factor = 2
				NOT = { FROMFROM = { age = 8 } }
			}
			modifier = {
				factor = 2
				NOT = { FROMFROM = { age = 4 } }
			}
		}
		# Set flags and target lock
		FROM = {
			set_character_flag = flag_duel_winner
			add_trait = duel_target
		}
		FROMFROM = {
			set_character_flag = flag_duel_loser
			add_trait = duel_target
			opinion = { who = FROM modifier = opinion_duel_target }
			reverse_opinion = { who = FROM modifier = opinion_duel_target }
			character_event = { id = hde_core.1 }
		}
	}
	# FROMFROM wins
	option = {
		name = AI_EVENT
		ai_chance = {
			factor = 50
			# Skill-at-Arms Effects
			modifier = {
				factor = 3
				FROMFROM = { trait = poor_warrior }
			}
			modifier = {
				factor = 6
				FROMFROM = { trait = trained_warrior }
			}
			modifier = {
				factor = 9
				FROMFROM = { trait = skilled_warrior }
			}
			modifier = {
				factor = 12
				FROMFROM = { trait = master_warrior }
			}
			# Martial Education Effects
			modifier = {
				factor = 1.5
				FROMFROM = { trait = misguided_warrior }
			}
			modifier = {
				factor = 3
				FROMFROM = { trait = tough_soldier }
			}
			modifier = {
				factor = 4.5
				FROMFROM = { trait = skilled_tactician }
			}
			modifier = {
				factor = 6
				FROMFROM = { trait = brilliant_strategist }
			}
			# Various Martial Traits
			modifier = {
				factor = 3
				FROMFROM = { trait = duelist }
			}
			# Martial Skill
			modifier = {
				factor = 1.1
				FROMFROM = { martial = 10 }
				NOT = { FROMFROM = { martial = 15 } }
			}
			modifier = {
				factor = 1.3
				FROMFROM = { martial = 15 }
				NOT = { FROMFROM = { martial = 20 } }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { martial = 20 }
			}
			# Physical Strength Effects
			modifier = {
				factor = 2
				FROMFROM = { trait = strong }
			}
			modifier = {
				factor = 2
				FROM = { trait = weak }
			}
			# Cunning/Intelligence Effects
			modifier = {
				factor = 2
				FROMFROM = { trait = genius }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = quick }
			}
			modifier = {
				factor = 2
				FROM = { trait = imbecile }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = slow }
			}
			# Personality Effects
			modifier = {
				factor = 2
				FROMFROM = { trait = brave }
			}
			modifier = {
				factor = 2
				FROMFROM = { trait = wroth }
			}
			modifier = {
				factor = 2
				FROM = { trait = craven }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = deceitful }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = honest }
			}
			# Wound Effects
			modifier = {
				factor = 2
				FROM = { trait = wounded }
			}
			modifier = {
				factor = 4
				FROM = { trait = maimed }
			}
			modifier = {
				factor = 999999
				FROM = { trait = incapable }
			}
			# Health Effects
			modifier = {
				factor = 1.5
				FROM = { trait = ill }
			}
			modifier = {
				factor = 2
				FROM = { trait = pneumonic }
			}
			modifier = {
				factor = 8
				FROM = { trait = leper }
			}
			modifier = {
				factor = 4
				FROM = { trait = infirm }
			}
			modifier = {
				factor = 6
				OR = {
					FROM = { trait = has_tuberculosis }
					FROM = { trait = has_typhoid_fever }
					FROM = { trait = has_typhus }
					FROM = { trait = has_bubonic_plague }
					FROM = { trait = has_measles }
					FROM = { trait = has_small_pox }
					FROM = { trait = has_aztec_disease }
				}
			}
			modifier = {
				factor = 10
				FROM = { trait = blinded }
			}
			# Body Shape Effects
			modifier = {
				factor = 1.5
				FROMFROM = { trait = tall }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = agile }
			}
			modifier = {
				factor = 1.5
				FROMFROM = { trait = perceptive }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = absentminded }
			}
			modifier = {
				factor = 4
				FROM = { trait = hunchback }
			}
			modifier = {
				factor = 4
				FROM = { trait = dwarf }
			}
			modifier = {
				factor = 4
				FROM = { trait = clubfooted }
			}
			modifier = {
				factor = 2
				OR = {
					FROMFROM = { trait = lefthanded }
					FROMFROM = { trait = ambidextrous }
				}
				NOT = { FROM = { trait = lefthanded } }
				NOT = { FROM = { trait = ambidextrous } }
			}
			# Age Effects
			modifier = {
				factor = 2
				NOT = { FROM = { age = 16 } }
			}
			modifier = {
				factor = 2
				NOT = { FROM = { age = 12 } }
			}
			modifier = {
				factor = 2
				NOT = { FROM = { age = 8 } }
			}
			modifier = {
				factor = 2
				NOT = { FROM = { age = 4 } }
			}
		}
		# Set flags and target lock
		FROM = {
			set_character_flag = flag_duel_loser
			add_trait = duel_target
			opinion = { who = FROMFROM modifier = opinion_duel_target }
			reverse_opinion = { who = FROMFROM modifier = opinion_duel_target }
			character_event = { id = hde_core.1 }
		}
		FROMFROM = {
			set_character_flag = flag_duel_winner
			add_trait = duel_target
		}
	}
}

# Bounce event so localization works properly
character_event = {
	id = hde_core.1
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		duel_target = {
			limit = {
				has_opinion_modifier = { who = ROOT modifier = opinion_duel_target }
				has_character_flag = flag_duel_winner
			}
			character_event = { id = hde_core.2 }
		}
	}
	
	option = {
		name = OK
	}
}

### HANDLER EVENTS
# Initial handler, gives the duelists a chance to run away
# Winner = ROOT, loser = FROM
# These events are sent to the winner, so the subsequent event will be winner (ROOT) and loser (FROMFROM)
character_event = {
	id = hde_core.2
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		# There is no flavor flag, so default flavor (battlefield?)
		if = {
			limit = {
				NOT = {
					AND = {
						has_character_flag = flag_duel_battlefield
						# Insert all new flavor flags here
					}
				}
			}
			random_list = {
				50 = { character_event = { id = x.x } }
				50 = { character_event = { id = x.x } }
			}
		}
		# Battlefield Flavor
		if = {
			limit = { has_character_flag = flag_duel_battlefield }
			random_list = {
				50 = { character_event = { id = x.x } }
				50 = { character_event = { id = x.x } }
			}
		}
		# Insert new flavor flag blocks here
	}
	
	option = { name = OK }
}
